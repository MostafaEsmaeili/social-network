// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.EF.Repo;

namespace SocialNetwork.EF.Repo.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200517194401_SeedActivity")]
    partial class SeedActivity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialNetwork.DataModel.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Title")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Venue")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aea39df0-7f0f-4665-85c9-0a8d53b4b0c1"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2020, 3, 17, 15, 44, 0, 717, DateTimeKind.Local).AddTicks(9773),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            Venue = "Pub"
                        },
                        new
                        {
                            Id = new Guid("fd94389a-2c2b-4ad9-ab6d-0c103e9580fd"),
                            Category = "culture",
                            City = "Paris",
                            Date = new DateTime(2020, 4, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(5733),
                            Description = "Activity 1 month ago",
                            Title = "Past Activity 2",
                            Venue = "Louvre"
                        },
                        new
                        {
                            Id = new Guid("50ac4bc8-34cb-4b33-be47-20f63025d811"),
                            Category = "culture",
                            City = "London",
                            Date = new DateTime(2020, 6, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(5958),
                            Description = "Activity 1 month in future",
                            Title = "Future Activity 1",
                            Venue = "Natural History Museum"
                        },
                        new
                        {
                            Id = new Guid("6aefdaf6-cc65-4f73-98f6-f8a640c4fb8e"),
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2020, 7, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(5974),
                            Description = "Activity 2 months in future",
                            Title = "Future Activity 2",
                            Venue = "O2 Arena"
                        },
                        new
                        {
                            Id = new Guid("f46d56a0-bbd0-491f-9e93-26efb21e91d5"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2020, 8, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(5986),
                            Description = "Activity 3 months in future",
                            Title = "Future Activity 3",
                            Venue = "Another pub"
                        },
                        new
                        {
                            Id = new Guid("57155bf9-17eb-47de-ab7e-53dbd7f4104c"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2020, 9, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(6002),
                            Description = "Activity 4 months in future",
                            Title = "Future Activity 4",
                            Venue = "Yet another pub"
                        },
                        new
                        {
                            Id = new Guid("507c5cfb-ed68-4a5e-a5c5-f32581d0f840"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2020, 10, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(6011),
                            Description = "Activity 5 months in future",
                            Title = "Future Activity 5",
                            Venue = "Just another pub"
                        },
                        new
                        {
                            Id = new Guid("ddb0593f-2da0-4d15-8f46-51ab3e181cfe"),
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2020, 11, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(6023),
                            Description = "Activity 6 months in future",
                            Title = "Future Activity 6",
                            Venue = "Roundhouse Camden"
                        },
                        new
                        {
                            Id = new Guid("ecc74cf8-257a-458d-b1c3-70b68e00f94d"),
                            Category = "travel",
                            City = "London",
                            Date = new DateTime(2020, 12, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(6032),
                            Description = "Activity 2 months ago",
                            Title = "Future Activity 7",
                            Venue = "Somewhere on the Thames"
                        },
                        new
                        {
                            Id = new Guid("75f15285-0bae-4e57-b62b-01202e87269c"),
                            Category = "film",
                            City = "London",
                            Date = new DateTime(2021, 1, 17, 15, 44, 0, 722, DateTimeKind.Local).AddTicks(6046),
                            Description = "Activity 8 months in future",
                            Title = "Future Activity 8",
                            Venue = "Cinema"
                        });
                });

            modelBuilder.Entity("SocialNetwork.DataModel.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Values");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Value 101"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Value 201"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Value 301"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

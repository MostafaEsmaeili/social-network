// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.EF.Repo;

namespace SocialNetwork.EF.Repo.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200609190420_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialNetwork.DataModel.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Title")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30d3daf6-e45f-406b-8a7a-c9c9832bfb7e"),
                            Category = "drinks",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(1566),
                            Date = new DateTime(2020, 4, 9, 15, 4, 19, 950, DateTimeKind.Local).AddTicks(6896),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(2446),
                            Venue = "Pub"
                        },
                        new
                        {
                            Id = new Guid("f26787cc-3895-4485-8375-2fe35d70f1fc"),
                            Category = "culture",
                            City = "Paris",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3367),
                            Date = new DateTime(2020, 5, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6496),
                            Description = "Activity 1 month ago",
                            Title = "Past Activity 2",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3430),
                            Venue = "Louvre"
                        },
                        new
                        {
                            Id = new Guid("54295d0c-b5e4-4868-96e9-5dce2c6dd9e8"),
                            Category = "culture",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3458),
                            Date = new DateTime(2020, 7, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6657),
                            Description = "Activity 1 month in future",
                            Title = "Future Activity 1",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3463),
                            Venue = "Natural History Museum"
                        },
                        new
                        {
                            Id = new Guid("8179c099-9014-412b-87ed-bd87d41527bf"),
                            Category = "music",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3470),
                            Date = new DateTime(2020, 8, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6671),
                            Description = "Activity 2 months in future",
                            Title = "Future Activity 2",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3475),
                            Venue = "O2 Arena"
                        },
                        new
                        {
                            Id = new Guid("aeb22f5e-85fc-4eba-95bb-5646c063edc9"),
                            Category = "drinks",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3481),
                            Date = new DateTime(2020, 9, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6678),
                            Description = "Activity 3 months in future",
                            Title = "Future Activity 3",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3486),
                            Venue = "Another pub"
                        },
                        new
                        {
                            Id = new Guid("d7202aa0-307f-4a97-a66a-85c4f519f722"),
                            Category = "drinks",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3511),
                            Date = new DateTime(2020, 10, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6693),
                            Description = "Activity 4 months in future",
                            Title = "Future Activity 4",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3516),
                            Venue = "Yet another pub"
                        },
                        new
                        {
                            Id = new Guid("43ba9bf0-5da1-40fe-ab9a-db9d2d7d7092"),
                            Category = "drinks",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3523),
                            Date = new DateTime(2020, 11, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6700),
                            Description = "Activity 5 months in future",
                            Title = "Future Activity 5",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3528),
                            Venue = "Just another pub"
                        },
                        new
                        {
                            Id = new Guid("48fda600-d109-4d40-b4f5-c0ea55c104c2"),
                            Category = "music",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3536),
                            Date = new DateTime(2020, 12, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6707),
                            Description = "Activity 6 months in future",
                            Title = "Future Activity 6",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3540),
                            Venue = "Roundhouse Camden"
                        },
                        new
                        {
                            Id = new Guid("3c793a28-bb40-4c80-a5f3-ccfbfd9dda1e"),
                            Category = "travel",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3546),
                            Date = new DateTime(2021, 1, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6713),
                            Description = "Activity 2 months ago",
                            Title = "Future Activity 7",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3551),
                            Venue = "Somewhere on the Thames"
                        },
                        new
                        {
                            Id = new Guid("7c237c6d-8ea4-4ed2-91d5-16f766be6328"),
                            Category = "film",
                            City = "London",
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3557),
                            Date = new DateTime(2021, 2, 9, 15, 4, 19, 955, DateTimeKind.Local).AddTicks(6722),
                            Description = "Activity 8 months in future",
                            Title = "Future Activity 8",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 956, DateTimeKind.Local).AddTicks(3562),
                            Venue = "Cinema"
                        });
                });

            modelBuilder.Entity("SocialNetwork.DataModel.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4771684-36a6-4b2f-bc5b-fd8e8f47b990"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8112),
                            Email = "JohnDoe@domain.com",
                            FirstName = "John",
                            LastName = "Doe",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8222)
                        },
                        new
                        {
                            Id = new Guid("58829eb4-94da-4903-9b52-8a3150472d9b"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8295),
                            Email = "Jane.Smith@domain.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8302)
                        },
                        new
                        {
                            Id = new Guid("7a9cbf8c-a162-46c4-b6c6-284c014f1f6d"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8310),
                            Email = "Bruce.Lee@domain.com",
                            FirstName = "Bruce",
                            LastName = "Lee",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 957, DateTimeKind.Local).AddTicks(8315)
                        });
                });

            modelBuilder.Entity("SocialNetwork.DataModel.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passoword")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Salt")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR(24)")
                        .HasMaxLength(24);

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9f17d50-3121-4b93-be15-06a9db1ec5e9"),
                            AppUserId = new Guid("f4771684-36a6-4b2f-bc5b-fd8e8f47b990"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1364),
                            Passoword = "/8j7Y3aH1/NIcu5PWDxBaTftbv7kIhPN7IsIY+iDIZ0=",
                            Salt = "St0OnTE2Ju3Li9uSnlz/Mg==",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1436),
                            UserName = "JohnDoe@domain.com"
                        },
                        new
                        {
                            Id = new Guid("5ca511e5-42ec-43fa-ab2e-cf82f272ac8f"),
                            AppUserId = new Guid("58829eb4-94da-4903-9b52-8a3150472d9b"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1801),
                            Passoword = "S10V+ChlwEm8VzgQIqvhHrUS65y7d9/E0AiYhKLwT0o=",
                            Salt = "f9/SzZwluz+xI51/VQQIzg==",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1814),
                            UserName = "Jane.Smith@domain.com"
                        },
                        new
                        {
                            Id = new Guid("411c9873-261f-4424-a228-06039a86f09e"),
                            AppUserId = new Guid("7a9cbf8c-a162-46c4-b6c6-284c014f1f6d"),
                            CreatedBy = "Seed",
                            CreatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1825),
                            Passoword = "5OekvvKMPp2M+O3Ts2/G912N9lCNqz412l1y8uHazZc=",
                            Salt = "DEX8D+3HR9flD6NpGibucQ==",
                            UpdatedBy = "Seed",
                            UpdatedDate = new DateTime(2020, 6, 9, 15, 4, 19, 959, DateTimeKind.Local).AddTicks(1830),
                            UserName = "Bruce.Lee@domain.com"
                        });
                });

            modelBuilder.Entity("SocialNetwork.DataModel.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Value");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Value 101"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Value 201"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Value 301"
                        });
                });

            modelBuilder.Entity("SocialNetwork.DataModel.IdentityUser", b =>
                {
                    b.HasOne("SocialNetwork.DataModel.AppUser", "AppUser")
                        .WithOne("IdentityUser")
                        .HasForeignKey("SocialNetwork.DataModel.IdentityUser", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
